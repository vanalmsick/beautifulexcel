name: Dev Publish Python üêç distribution üì¶ to TestPyPI

on:
  push:
    branches: [ 'dev' ]
    paths-ignore: [ 'docs/**' ]

jobs:
  testing:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # Install pip and pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: Test with pytest
        run: pytest tests/ --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}


  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    needs:
      - testing

    steps:
      - uses: actions/checkout@v4 # Checkout the code
      - name: Set up Python
        uses: actions/setup-python@v5 # Set up the Python environment
        with:
          python-version: "3.x"
      - name: Install pypa/build # Install the build tool
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build # Build the package
      - name: Store the distribution packages # Temporarily store the build artifacts in the dist directory under the name python-package-distributions
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
      - build # Start the job only if the build job has completed
    runs-on: ubuntu-latest

    environment:
      name: testpypi # Enter the environment name set in the Publisher
      url: https://test.pypi.org/p/beautifulexcel # Project URL

    permissions:
      id-token: write  # Grant Publishing permissions

    steps:
      - name: Download all the dists # Download the build artifacts that were saved earlier
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to TestPyPI # Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
